library(Rcpp)
library(devtools)
usethis::use_vignette('simplin')
library(Rcpp)
compileAttributes()
build()
Rcpp::sourceCpp('src/simplin.cpp')
library(Rcpp)
library(RcppArmadillo)
Rcpp::sourceCpp('src/simplin.cpp')
Rcpp::sourceCpp('src/simplin.cpp')
Rcpp::sourceCpp('src/simplin.cpp')
simp_lin_cpp(1:5,c(2:5,6.1),5)
build()
build()
.Last.error.trace
Rcpp::sourceCpp('src/simplin.cpp')
simp_lin_cpp(1:5,c(2:5,6.1),5)
build()
Rcpp::sourceCpp('src/simplin.cpp')
compileAttributes()
build
build()
compileAttributes()
build()
install()
file.exists('~/.ssh/id_rsa.pub')
simp_lin_R(1:5,c(2:5,6.1))
library(simplin)
simp_lin_R(1:5,c(2:5,6.1))
library(Rcpp)
compileAttributes()
build()
library(devtools)
build()
install()
library(simplin)
x <- rnorm(n)
x <- rnorm(100)
simp_lin_R(x,1-x+rnorm(100))
simp_lin_R(x,1-x+rnorm(100))$c
x <- rnorm(100)
simp_lin_R(x,1-x+rnorm(100))$c
x <- rnorm(100)
simp_lin_R(x,1-x+rnorm(100))$c
Rcpp::sourceCpp('src/simplin.cpp')
simp_lin_R <- function(x,y){
if(is.numeric(x)*is.numeric(y)*is.vector(x)*is.vector(y)<1){
stop('should be numeric vector')
}
if((length(x)-length(y))!=0){
stop('should have rhe asme length')
}
ans <- simp_lin_cpp(x,y,length(x))
coef <- matrix(c(ans[[1]],ans[[2]]),2,4,byrow=TRUE)
rownames(coef) <- c('beta0','beta1')
colnames(coef) <- c('estimate','se','lower 95CI','upper 95CI')
return(list(coef=coef,pred=ans[[3]],res=ans[[4]]))
}
x <- rnorm(100)
simp_lin_R(x,1-x+rnorm(x))
x <- rnorm(100)
simp_lin_R(x,1-x+rnorm(x))$c
x <- rnorm(100)
simp_lin_R(x,1-x+rnorm(x))$c
x <- rnorm(100)
simp_lin_R(x,1-x+rnorm(x))$c
Rcpp::sourceCpp('src/simplin.cpp')
simp_lin_R <- function(x,y){
if(is.numeric(x)*is.numeric(y)*is.vector(x)*is.vector(y)<1){
stop('should be numeric vector')
}
if((length(x)-length(y))!=0){
stop('should have rhe asme length')
}
ans <- simp_lin_cpp(x,y,length(x))
coef <- matrix(c(ans[[1]],ans[[2]]),2,4,byrow=TRUE)
rownames(coef) <- c('beta0','beta1')
colnames(coef) <- c('estimate','se','lower 95CI','upper 95CI')
return(list(coef=coef,pred=ans[[3]],res=ans[[4]]))
}
x <- rnorm(100)
simp_lin_R(x,1-x+rnorm(x))$c
x <- rnorm(100)
simp_lin_R(x,1-x+rnorm(x))$c
x <- rnorm(100)
y <- 1-x+rnorm(100)
simp_lin_R(x,y)
simp_lin_R(x,y)$c
summary(lm(x,y))
summary(lm(y~x))
Rcpp::sourceCpp('src/simplin.cpp')
x <- rnorm(100)
y <- 1-x+rnorm(100)
simp_lin_R(x,y)$c
summary(lm(y~x))
compileAttributes()
build()
install()
library(simplin)
